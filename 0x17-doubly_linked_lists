{"payload":{"allShortcutsEnabled":false,"path":"0x17-doubly_linked_lists","repo":{"id":509111471,"defaultBranch":"master","name":"alx-low_level_programming","ownerLogin":"manKellyJr","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2022-06-30T14:22:28.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/67377574?v=4","public":true,"private":false,"isOrgOwned":false},"currentUser":null,"refInfo":{"name":"master","listCacheKey":"v0:1656619076.054765","canEdit":false,"refType":"branch","currentOid":"77b098d994ef24e97a3e6136d88cf0044d6139f8"},"tree":{"items":[{"name":"0-main.c","path":"0x17-doubly_linked_lists/0-main.c","contentType":"file"},{"name":"0-print_dlistint.c","path":"0x17-doubly_linked_lists/0-print_dlistint.c","contentType":"file"},{"name":"1-dlistint_len.c","path":"0x17-doubly_linked_lists/1-dlistint_len.c","contentType":"file"},{"name":"1-main.c","path":"0x17-doubly_linked_lists/1-main.c","contentType":"file"},{"name":"100-password","path":"0x17-doubly_linked_lists/100-password","contentType":"file"},{"name":"102-result","path":"0x17-doubly_linked_lists/102-result","contentType":"file"},{"name":"2-add_dnodeint.c","path":"0x17-doubly_linked_lists/2-add_dnodeint.c","contentType":"file"},{"name":"2-main.c","path":"0x17-doubly_linked_lists/2-main.c","contentType":"file"},{"name":"3-add_dnodeint_end.c","path":"0x17-doubly_linked_lists/3-add_dnodeint_end.c","contentType":"file"},{"name":"3-main.c","path":"0x17-doubly_linked_lists/3-main.c","contentType":"file"},{"name":"4-free_dlistint.c","path":"0x17-doubly_linked_lists/4-free_dlistint.c","contentType":"file"},{"name":"4-main.c","path":"0x17-doubly_linked_lists/4-main.c","contentType":"file"},{"name":"5-get_dnodeint.c","path":"0x17-doubly_linked_lists/5-get_dnodeint.c","contentType":"file"},{"name":"5-main.c","path":"0x17-doubly_linked_lists/5-main.c","contentType":"file"},{"name":"6-main.c","path":"0x17-doubly_linked_lists/6-main.c","contentType":"file"},{"name":"6-sum_dlistint.c","path":"0x17-doubly_linked_lists/6-sum_dlistint.c","contentType":"file"},{"name":"7-insert_dnodeint.c","path":"0x17-doubly_linked_lists/7-insert_dnodeint.c","contentType":"file"},{"name":"7-main.c","path":"0x17-doubly_linked_lists/7-main.c","contentType":"file"},{"name":"8-delete_dnodeint.c","path":"0x17-doubly_linked_lists/8-delete_dnodeint.c","contentType":"file"},{"name":"8-main.c","path":"0x17-doubly_linked_lists/8-main.c","contentType":"file"},{"name":"README.md","path":"0x17-doubly_linked_lists/README.md","contentType":"file"},{"name":"a","path":"0x17-doubly_linked_lists/a","contentType":"file"},{"name":"b","path":"0x17-doubly_linked_lists/b","contentType":"file"},{"name":"c","path":"0x17-doubly_linked_lists/c","contentType":"file"},{"name":"d","path":"0x17-doubly_linked_lists/d","contentType":"file"},{"name":"e","path":"0x17-doubly_linked_lists/e","contentType":"file"},{"name":"h","path":"0x17-doubly_linked_lists/h","contentType":"file"},{"name":"i","path":"0x17-doubly_linked_lists/i","contentType":"file"},{"name":"j","path":"0x17-doubly_linked_lists/j","contentType":"file"},{"name":"k","path":"0x17-doubly_linked_lists/k","contentType":"file"},{"name":"lists.h","path":"0x17-doubly_linked_lists/lists.h","contentType":"file"},{"name":"palindrome.c","path":"0x17-doubly_linked_lists/palindrome.c","contentType":"file"}],"templateDirectorySuggestionUrl":null,"readme":{"displayName":"README.md","richText":"<article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-0x17-c---doubly-linked-lists\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#0x17-c---doubly-linked-lists\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>0x17. C - Doubly linked lists</h1>\n<h2 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-resourcesbooks\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#resourcesbooks\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>Resources:books:</h2>\n<p dir=\"auto\">Read or watch:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://intranet.hbtn.io/rltoken/d6DW7K0HrkIcVdzZxkidDw\" rel=\"nofollow\">What is a Doubly Linked List</a></li>\n</ul>\n<hr>\n<h2 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-learning-objectivesbulb\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#learning-objectivesbulb\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>Learning Objectives:bulb:</h2>\n<p dir=\"auto\">What you should learn from this project:</p>\n<ul dir=\"auto\">\n<li>What is a doubly linked list</li>\n<li>How to use doubly linked lists</li>\n<li>Start to look for the right source of information without too much help</li>\n</ul>\n<hr>\n<h2 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-general\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#general\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>General</h2>\n<ul dir=\"auto\">\n<li>Allowed editors: vi, vim, emacs</li>\n<li>All your files will be compiled on Ubuntu 14.04 LTS</li>\n<li>Your programs and functions will be compiled with gcc 4.8.4 using the flags -Wall -Werror -Wextra and -pedantic</li>\n<li>All your files should end with a new line</li>\n<li>A README.md file, at the root of the folder of the project is mandatory</li>\n<li>Your code should use the Betty style. It will be checked using betty-style.pl and betty-doc.pl</li>\n<li>You are not allowed to use global variables</li>\n<li>No more than 5 functions per file</li>\n<li>The only C standard library functions allowed are malloc, free, printf and exit</li>\n<li>In the following examples, the main.c files are shown as examples. You can use them to test your functions, but you don’t have to push them to your repo (if you do we won’t take them into account). We will use our own main.c files at compilation. Our main.c files might be different from the one shown in the examples</li>\n<li>The prototypes of all your functions should be included in your header file called lists.h</li>\n<li>Don’t forget to push your header file</li>\n<li>All your header files should be include guarded</li>\n</ul>\n<hr>\n<h2 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-more-info\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#more-info\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>More Info</h2>\n<p dir=\"auto\">Please use this data structure for this project:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/**\n * struct dlistint_s - doubly linked list\n * @n: integer\n * @prev: points to the previous node\n * @next: points to the next node\n *\n * Description: doubly linked list node structure\n * for Holberton project\n */\ntypedef struct dlistint_s\n{\n    int n;\n    struct dlistint_s *prev;\n    struct dlistint_s *next;\n} dlistint_t;\"><pre class=\"notranslate\"><code>/**\n * struct dlistint_s - doubly linked list\n * @n: integer\n * @prev: points to the previous node\n * @next: points to the next node\n *\n * Description: doubly linked list node structure\n * for Holberton project\n */\ntypedef struct dlistint_s\n{\n    int n;\n    struct dlistint_s *prev;\n    struct dlistint_s *next;\n} dlistint_t;\n</code></pre></div>\n<hr>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-0-print-list-0-print_dlistintc\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#0-print-list-0-print_dlistintc\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>[0. Print list](./ 0-print_dlistint.c)</h3>\n<ul dir=\"auto\">\n<li>Write a function that prints all the elements of a dlistint_t list.</li>\n<li>Prototype: size_t print_dlistint(const dlistint_t *h);</li>\n<li>Return: the number of nodes</li>\n<li>Format: see example</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"julien@ubuntu:~/0x17. Doubly linked lists$ cat 0-main.c \n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &quot;lists.h&quot;\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n    dlistint_t *new;\n    dlistint_t hello = {8, NULL, NULL};\n    size_t n;\n\n    head = &amp;hello;\n    new = malloc(sizeof(dlistint_t));\n    if (new == NULL)\n    {\n        dprintf(2, &quot;Error: Can't malloc\\n&quot;);\n        return (EXIT_FAILURE);\n    }\n    new-&gt;n = 9;\n    head-&gt;prev = new;\n    new-&gt;next = head;\n    new-&gt;prev = NULL;\n    head = new;\n    n = print_dlistint(head);\n    printf(&quot;-&gt; %lu elements\\n&quot;, n);\n    free(new);\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 0-main.c 0-print_dlistint.c -o a\njulien@ubuntu:~/0x17. Doubly linked lists$ ./a \n9\n8\n-&gt; 2 elements\njulien@ubuntu:~/0x17. Doubly linked lists$ \"><pre class=\"notranslate\"><code>julien@ubuntu:~/0x17. Doubly linked lists$ cat 0-main.c \n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include \"lists.h\"\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n    dlistint_t *new;\n    dlistint_t hello = {8, NULL, NULL};\n    size_t n;\n\n    head = &amp;hello;\n    new = malloc(sizeof(dlistint_t));\n    if (new == NULL)\n    {\n        dprintf(2, \"Error: Can't malloc\\n\");\n        return (EXIT_FAILURE);\n    }\n    new-&gt;n = 9;\n    head-&gt;prev = new;\n    new-&gt;next = head;\n    new-&gt;prev = NULL;\n    head = new;\n    n = print_dlistint(head);\n    printf(\"-&gt; %lu elements\\n\", n);\n    free(new);\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 0-main.c 0-print_dlistint.c -o a\njulien@ubuntu:~/0x17. Doubly linked lists$ ./a \n9\n8\n-&gt; 2 elements\njulien@ubuntu:~/0x17. Doubly linked lists$ \n</code></pre></div>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-1-list-length\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#1-list-length\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/1-dlistint_len.c\">1. List length</a></h3>\n<ul dir=\"auto\">\n<li>Write a function that returns the number of elements in a linked dlistint_t list.</li>\n<li>Prototype: size_t dlistint_len(const dlistint_t *h);</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"julien@ubuntu:~/0x17. Doubly linked lists$ cat 1-main.c \n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &quot;lists.h&quot;\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n    dlistint_t *new;\n    dlistint_t hello = {8, NULL, NULL};\n    size_t n;\n\n    head = &amp;hello;\n    new = malloc(sizeof(dlistint_t));\n    if (new == NULL)\n    {\n        dprintf(2, &quot;Error: Can't malloc\\n&quot;);\n        return (EXIT_FAILURE);\n    }\n    new-&gt;n = 9;\n    head-&gt;prev = new;\n    new-&gt;next = head;\n    new-&gt;prev = NULL;\n    head = new;\n    n = dlistint_len(head);\n    printf(&quot;-&gt; %lu elements\\n&quot;, n);\n    free(new);\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 1-main.c 1-dlistint_len.c -o b\njulien@ubuntu:~/0x17. Doubly linked lists$ ./b \n-&gt; 2 elements\njulien@ubuntu:~/0x17. Doubly linked lists$ \"><pre class=\"notranslate\"><code>julien@ubuntu:~/0x17. Doubly linked lists$ cat 1-main.c \n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include \"lists.h\"\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n    dlistint_t *new;\n    dlistint_t hello = {8, NULL, NULL};\n    size_t n;\n\n    head = &amp;hello;\n    new = malloc(sizeof(dlistint_t));\n    if (new == NULL)\n    {\n        dprintf(2, \"Error: Can't malloc\\n\");\n        return (EXIT_FAILURE);\n    }\n    new-&gt;n = 9;\n    head-&gt;prev = new;\n    new-&gt;next = head;\n    new-&gt;prev = NULL;\n    head = new;\n    n = dlistint_len(head);\n    printf(\"-&gt; %lu elements\\n\", n);\n    free(new);\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 1-main.c 1-dlistint_len.c -o b\njulien@ubuntu:~/0x17. Doubly linked lists$ ./b \n-&gt; 2 elements\njulien@ubuntu:~/0x17. Doubly linked lists$ \n</code></pre></div>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-2-add-node\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#2-add-node\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/2-add_dnodeint.c\">2. Add node</a></h3>\n<ul dir=\"auto\">\n<li>Write a function that adds a new node at the beginning of a dlistint_t list.</li>\n<li>Prototype: dlistint_t *add_dnodeint(dlistint_t **head, const int n);</li>\n<li>Return: the address of the new element, or NULL if it failed</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"julien@ubuntu:~/0x17. Doubly linked lists$ cat 2-main.c \n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &quot;lists.h&quot;\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n\n    head = NULL;\n    add_dnodeint(&amp;head, 0);\n    add_dnodeint(&amp;head, 1);\n    add_dnodeint(&amp;head, 2);\n    add_dnodeint(&amp;head, 3);\n    add_dnodeint(&amp;head, 4);\n    add_dnodeint(&amp;head, 98);\n    add_dnodeint(&amp;head, 402);\n    add_dnodeint(&amp;head, 1024);\n    print_dlistint(head);\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 2-main.c 2-add_dnodeint.c 0-print_dlistint.c -o c\njulien@ubuntu:~/0x17. Doubly linked lists$ ./c \n1024\n402\n98\n4\n3\n2\n1\n0\njulien@ubuntu:~/0x17. Doubly linked lists$ \"><pre class=\"notranslate\"><code>julien@ubuntu:~/0x17. Doubly linked lists$ cat 2-main.c \n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include \"lists.h\"\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n\n    head = NULL;\n    add_dnodeint(&amp;head, 0);\n    add_dnodeint(&amp;head, 1);\n    add_dnodeint(&amp;head, 2);\n    add_dnodeint(&amp;head, 3);\n    add_dnodeint(&amp;head, 4);\n    add_dnodeint(&amp;head, 98);\n    add_dnodeint(&amp;head, 402);\n    add_dnodeint(&amp;head, 1024);\n    print_dlistint(head);\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 2-main.c 2-add_dnodeint.c 0-print_dlistint.c -o c\njulien@ubuntu:~/0x17. Doubly linked lists$ ./c \n1024\n402\n98\n4\n3\n2\n1\n0\njulien@ubuntu:~/0x17. Doubly linked lists$ \n</code></pre></div>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-3-add-node-at-the-end\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#3-add-node-at-the-end\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/3-add_dnodeint_end.c\">3. Add node at the end</a></h3>\n<ul dir=\"auto\">\n<li>Write a function that adds a new node at the end of a dlistint_t list.</li>\n<li>Prototype: dlistint_t *add_dnodeint_end(dlistint_t **head, const int n);</li>\n<li>Return: the address of the new element, or NULL if it failed</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"julien@ubuntu:~/0x17. Doubly linked lists$ cat 3-main.c \n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &quot;lists.h&quot;\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    print_dlistint(head);\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 3-main.c 3-add_dnodeint_end.c 0-print_dlistint.c -o d\njulien@ubuntu:~/0x17. Doubly linked lists$ ./d \n0\n1\n2\n3\n4\n98\n402\n1024\njulien@ubuntu:~/0x17. Doubly linked lists$ \"><pre class=\"notranslate\"><code>julien@ubuntu:~/0x17. Doubly linked lists$ cat 3-main.c \n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include \"lists.h\"\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    print_dlistint(head);\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 3-main.c 3-add_dnodeint_end.c 0-print_dlistint.c -o d\njulien@ubuntu:~/0x17. Doubly linked lists$ ./d \n0\n1\n2\n3\n4\n98\n402\n1024\njulien@ubuntu:~/0x17. Doubly linked lists$ \n</code></pre></div>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-4-free-list\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#4-free-list\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/4-free_dlistint.c\">4. Free list</a></h3>\n<ul dir=\"auto\">\n<li>Write a function that free a dlistint_t list.</li>\n<li>Prototype: void free_dlistint(dlistint_t *head);</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"julien@ubuntu:~/0x17. Doubly linked lists$ cat 4-main.c\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &quot;lists.h&quot;\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    print_dlistint(head);\n    free_dlistint(head);\n    head = NULL;\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 4-main.c 3-add_dnodeint_end.c 0-print_dlistint.c 4-free_dlistint.c -o e\njulien@ubuntu:~/0x17. Doubly linked lists$ valgrind ./e \n==4197== Memcheck, a memory error detector\n==4197== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==4197== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==4197== Command: ./e\n==4197== \n0\n1\n2\n3\n4\n98\n402\n1024\n==4197== \n==4197== HEAP SUMMARY:\n==4197==     in use at exit: 0 bytes in 0 blocks\n==4197==   total heap usage: 9 allocs, 9 frees, 1,216 bytes allocated\n==4197== \n==4197== All heap blocks were freed -- no leaks are possible\n==4197== \n==4197== For counts of detected and suppressed errors, rerun with: -v\n==4197== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\njulien@ubuntu:~/0x17. Doubly linked lists$ \"><pre class=\"notranslate\"><code>julien@ubuntu:~/0x17. Doubly linked lists$ cat 4-main.c\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include \"lists.h\"\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    print_dlistint(head);\n    free_dlistint(head);\n    head = NULL;\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 4-main.c 3-add_dnodeint_end.c 0-print_dlistint.c 4-free_dlistint.c -o e\njulien@ubuntu:~/0x17. Doubly linked lists$ valgrind ./e \n==4197== Memcheck, a memory error detector\n==4197== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==4197== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==4197== Command: ./e\n==4197== \n0\n1\n2\n3\n4\n98\n402\n1024\n==4197== \n==4197== HEAP SUMMARY:\n==4197==     in use at exit: 0 bytes in 0 blocks\n==4197==   total heap usage: 9 allocs, 9 frees, 1,216 bytes allocated\n==4197== \n==4197== All heap blocks were freed -- no leaks are possible\n==4197== \n==4197== For counts of detected and suppressed errors, rerun with: -v\n==4197== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\njulien@ubuntu:~/0x17. Doubly linked lists$ \n</code></pre></div>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-5-get-node-at-index\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#5-get-node-at-index\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/5-get_dnodeint.c\">5. Get node at index</a></h3>\n<ul dir=\"auto\">\n<li>Write a function that returns the nth node of a dlistint_t linked list.</li>\n<li>Prototype: dlistint_t *get_dnodeint_at_index(dlistint_t *head, unsigned int index);</li>\n<li>where index is the index of the node, starting from 0</li>\n<li>if the node does not exist, return NULL</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"julien@ubuntu:~/0x17. Doubly linked lists$ cat 5-main.c\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &quot;lists.h&quot;\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n    dlistint_t *node;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    print_dlistint(head);\n    node = get_dnodeint_at_index(head, 5);\n    printf(&quot;%d\\n&quot;, node-&gt;n);\n    free_dlistint(head);\n    head = NULL;\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 5-main.c 3-add_dnodeint_end.c 0-print_dlistint.c 4-free_dlistint.c 5-get_dnodeint.c -o h\njulien@ubuntu:~/0x17. Doubly linked lists$ ./h\n0\n1\n2\n3\n4\n98\n402\n1024\n98\njulien@ubuntu:~/0x17. Doubly linked lists$ \"><pre class=\"notranslate\"><code>julien@ubuntu:~/0x17. Doubly linked lists$ cat 5-main.c\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include \"lists.h\"\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n    dlistint_t *node;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    print_dlistint(head);\n    node = get_dnodeint_at_index(head, 5);\n    printf(\"%d\\n\", node-&gt;n);\n    free_dlistint(head);\n    head = NULL;\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 5-main.c 3-add_dnodeint_end.c 0-print_dlistint.c 4-free_dlistint.c 5-get_dnodeint.c -o h\njulien@ubuntu:~/0x17. Doubly linked lists$ ./h\n0\n1\n2\n3\n4\n98\n402\n1024\n98\njulien@ubuntu:~/0x17. Doubly linked lists$ \n</code></pre></div>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-6-sum-list\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#6-sum-list\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/6-sum_dlistint.c\">6. Sum list</a></h3>\n<ul dir=\"auto\">\n<li>Write a function that returns the sum of all the data (n) of a dlistint_t linked list.</li>\n<li>Prototype: int sum_dlistint(dlistint_t *head);</li>\n<li>if the list is empty, return 0</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"julien@ubuntu:~/0x17. Doubly linked lists$ cat 6-main.c \n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &quot;lists.h&quot;\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n    int sum;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    sum = sum_dlistint(head);\n    printf(&quot;sum = %d\\n&quot;, sum);\n    free_dlistint(head);\n    head = NULL;\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 6-main.c 3-add_dnodeint_end.c 4-free_dlistint.c 6-sum_dlistint.c -o i\njulien@ubuntu:~/0x17. Doubly linked lists$ ./i \nsum = 1534\njulien@ubuntu:~/0x17. Doubly linked lists$ \"><pre class=\"notranslate\"><code>julien@ubuntu:~/0x17. Doubly linked lists$ cat 6-main.c \n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include \"lists.h\"\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n    int sum;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    sum = sum_dlistint(head);\n    printf(\"sum = %d\\n\", sum);\n    free_dlistint(head);\n    head = NULL;\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 6-main.c 3-add_dnodeint_end.c 4-free_dlistint.c 6-sum_dlistint.c -o i\njulien@ubuntu:~/0x17. Doubly linked lists$ ./i \nsum = 1534\njulien@ubuntu:~/0x17. Doubly linked lists$ \n</code></pre></div>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-7-insert-at-index\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#7-insert-at-index\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/7-insert_dnodeint.c\">7. Insert at index</a></h3>\n<ul dir=\"auto\">\n<li>Write a function that inserts a new node at a given position.</li>\n<li>Prototype: dlistint_t *insert_dnodeint_at_index(dlistint_t **h, unsigned int idx, int n);</li>\n<li>where idx is the index of the list where the new node should be added. Index starts at 0</li>\n<li>Returns: the address of the new node, or NULL if it failed</li>\n<li>if it is not possible to add the new node at index idx, do not add the new node and return NULL</li>\n</ul>\n<p dir=\"auto\">Your files 2-add_dnodeint.c and 3-add_dnodeint_end.c will be compiled during the correction</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"julien@ubuntu:~/0x17. Doubly linked lists$ cat 7-main.c\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &quot;lists.h&quot;\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    print_dlistint(head);\n    printf(&quot;-----------------\\n&quot;);\n    insert_dnodeint_at_index(&amp;head, 5, 4096);\n    print_dlistint(head);\n    free_dlistint(head);\n    head = NULL;\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 7-main.c 2-add_dnodeint.c 3-add_dnodeint_end.c 0-print_dlistint.c 4-free_dlistint.c 7-insert_dnodeint.c -o j\njulien@ubuntu:~/0x17. Doubly linked lists$ ./j \n0\n1\n2\n3\n4\n98\n402\n1024\n-----------------\n0\n1\n2\n3\n4\n4096\n98\n402\n1024\njulien@ubuntu:~/0x17. Doubly linked lists$\"><pre class=\"notranslate\"><code>julien@ubuntu:~/0x17. Doubly linked lists$ cat 7-main.c\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include \"lists.h\"\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    print_dlistint(head);\n    printf(\"-----------------\\n\");\n    insert_dnodeint_at_index(&amp;head, 5, 4096);\n    print_dlistint(head);\n    free_dlistint(head);\n    head = NULL;\n    return (EXIT_SUCCESS);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 7-main.c 2-add_dnodeint.c 3-add_dnodeint_end.c 0-print_dlistint.c 4-free_dlistint.c 7-insert_dnodeint.c -o j\njulien@ubuntu:~/0x17. Doubly linked lists$ ./j \n0\n1\n2\n3\n4\n98\n402\n1024\n-----------------\n0\n1\n2\n3\n4\n4096\n98\n402\n1024\njulien@ubuntu:~/0x17. Doubly linked lists$\n</code></pre></div>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-8-delete-at-index\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#8-delete-at-index\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/8-delete_dnodeint.c\">8. Delete at index</a></h3>\n<ul dir=\"auto\">\n<li>Write a function that deletes the node at index index of a dlistint_t linked list.</li>\n<li>Prototype: int delete_dnodeint_at_index(dlistint_t **head, unsigned int index);</li>\n<li>where index is the index of the node that should be deleted. Index starts at 0</li>\n<li>Returns: 1 if it succeeded, -1 if it failed</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"julien@ubuntu:~/0x17. Doubly linked lists$ cat 8-main.c\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &quot;lists.h&quot;\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    print_dlistint(head);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 5);\n    print_dlistint(head);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(&quot;-----------------\\n&quot;);\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    return (0);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 8-main.c 3-add_dnodeint_end.c 0-print_dlistint.c 4-free_dlistint.c 8-delete_dnodeint.c -o k\njulien@ubuntu:~/0x17. Doubly linked lists$ ./k\n0\n1\n2\n3\n4\n98\n402\n1024\n-----------------\n0\n1\n2\n3\n4\n402\n1024\n-----------------\n1\n2\n3\n4\n402\n1024\n-----------------\n2\n3\n4\n402\n1024\n-----------------\n3\n4\n402\n1024\n-----------------\n4\n402\n1024\n-----------------\n402\n1024\n-----------------\n1024\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\njulien@ubuntu:~/0x17. Doubly linked lists$ \"><pre class=\"notranslate\"><code>julien@ubuntu:~/0x17. Doubly linked lists$ cat 8-main.c\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include \"lists.h\"\n\n/**\n * main - check the code for Holberton School students.\n *\n * Return: Always EXIT_SUCCESS.\n */\nint main(void)\n{\n    dlistint_t *head;\n\n    head = NULL;\n    add_dnodeint_end(&amp;head, 0);\n    add_dnodeint_end(&amp;head, 1);\n    add_dnodeint_end(&amp;head, 2);\n    add_dnodeint_end(&amp;head, 3);\n    add_dnodeint_end(&amp;head, 4);\n    add_dnodeint_end(&amp;head, 98);\n    add_dnodeint_end(&amp;head, 402);\n    add_dnodeint_end(&amp;head, 1024);\n    print_dlistint(head);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 5);\n    print_dlistint(head);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    printf(\"-----------------\\n\");\n    delete_dnodeint_at_index(&amp;head, 0);\n    print_dlistint(head);\n    return (0);\n}\njulien@ubuntu:~/0x17. Doubly linked lists$ gcc -Wall -pedantic -Werror -Wextra 8-main.c 3-add_dnodeint_end.c 0-print_dlistint.c 4-free_dlistint.c 8-delete_dnodeint.c -o k\njulien@ubuntu:~/0x17. Doubly linked lists$ ./k\n0\n1\n2\n3\n4\n98\n402\n1024\n-----------------\n0\n1\n2\n3\n4\n402\n1024\n-----------------\n1\n2\n3\n4\n402\n1024\n-----------------\n2\n3\n4\n402\n1024\n-----------------\n3\n4\n402\n1024\n-----------------\n4\n402\n1024\n-----------------\n402\n1024\n-----------------\n1024\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\n-----------------\njulien@ubuntu:~/0x17. Doubly linked lists$ \n</code></pre></div>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-9-crackme4\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#9-crackme4\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/100-password\">9. Crackme4</a></h3>\n<ul dir=\"auto\">\n<li>Find the password for crackme4.</li>\n<li>Save the password in the file 100-password</li>\n<li>Your file should contain the exact password, no new line, no extra space</li>\n<li>Hint: The program prints “OK” when the password is correct</li>\n</ul>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-10-palindromes\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#10-palindromes\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/102-result\">10. Palindromes</a></h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.\nFind the largest palindrome made from the product of two 3-digit numbers.</p>\n</li>\n<li>\n<p dir=\"auto\">Save the result in the file 102-result</p>\n</li>\n<li>\n<p dir=\"auto\">Your file should contain the exact result, no new line, no extra space</p>\n</li>\n</ul>\n<h3 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-11-crackme5\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#11-crackme5\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"/manKellyJr/alx-low_level_programming/blob/master/0x17-doubly_linked_lists/103-keygen.c\">11. crackme5</a></h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Write a keygen for crackme5.</p>\n</li>\n<li>\n<p dir=\"auto\">Usage of the crackme: ./crackme5 username key</p>\n</li>\n<li>\n<p dir=\"auto\">The crackme will segfault if you do not enter the correct key for the user</p>\n</li>\n<li>\n<p dir=\"auto\">Usage for your keygen: ./keygen5 username</p>\n</li>\n<li>\n<p dir=\"auto\">Your keygen should print a valid key for the username</p>\n</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"julien@ubuntu:~/0x17$ gcc -Wall -pedantic -Werror -Wextra 103-keygen.c -o keygen5\njulien@ubuntu:~/0x17$ ./crackme5 julien javascript\nSegmentation fault (core dumped)\njulien@ubuntu:~/0x17$ ./crackme5 julien `./keygen5 julien`\nCongrats!\njulien@ubuntu:~/0x17$ \"><pre class=\"notranslate\"><code>julien@ubuntu:~/0x17$ gcc -Wall -pedantic -Werror -Wextra 103-keygen.c -o keygen5\njulien@ubuntu:~/0x17$ ./crackme5 julien javascript\nSegmentation fault (core dumped)\njulien@ubuntu:~/0x17$ ./crackme5 julien `./keygen5 julien`\nCongrats!\njulien@ubuntu:~/0x17$ \n</code></pre></div>\n<hr>\n<h2 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-author\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#author\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a>Author</h2>\n<ul dir=\"auto\">\n<li><strong>Robinson Montes</strong> - <a href=\"https://github.com/mecomonteshbtn\">mecomonteshbtn</a></li>\n</ul>\n</article>","errorMessage":null,"headerInfo":{"toc":[{"level":1,"text":"0x17. C - Doubly linked lists","anchor":"0x17-c---doubly-linked-lists","htmlText":"0x17. C - Doubly linked lists"},{"level":2,"text":"Resources:books:","anchor":"resourcesbooks","htmlText":"Resources:books:"},{"level":2,"text":"Learning Objectives:bulb:","anchor":"learning-objectivesbulb","htmlText":"Learning Objectives💡"},{"level":2,"text":"General","anchor":"general","htmlText":"General"},{"level":2,"text":"More Info","anchor":"more-info","htmlText":"More Info"},{"level":3,"text":"[0. Print list](./ 0-print_dlistint.c)","anchor":"0-print-list-0-print_dlistintc","htmlText":"[0. Print list](./ 0-print_dlistint.c)"},{"level":3,"text":"1. List length","anchor":"1-list-length","htmlText":"1. List length"},{"level":3,"text":"2. Add node","anchor":"2-add-node","htmlText":"2. Add node"},{"level":3,"text":"3. Add node at the end","anchor":"3-add-node-at-the-end","htmlText":"3. Add node at the end"},{"level":3,"text":"4. Free list","anchor":"4-free-list","htmlText":"4. Free list"},{"level":3,"text":"5. Get node at index","anchor":"5-get-node-at-index","htmlText":"5. Get node at index"},{"level":3,"text":"6. Sum list","anchor":"6-sum-list","htmlText":"6. Sum list"},{"level":3,"text":"7. Insert at index","anchor":"7-insert-at-index","htmlText":"7. Insert at index"},{"level":3,"text":"8. Delete at index","anchor":"8-delete-at-index","htmlText":"8. Delete at index"},{"level":3,"text":"9. Crackme4","anchor":"9-crackme4","htmlText":"9. Crackme4"},{"level":3,"text":"10. Palindromes","anchor":"10-palindromes","htmlText":"10. Palindromes"},{"level":3,"text":"11. crackme5","anchor":"11-crackme5","htmlText":"11. crackme5"},{"level":2,"text":"Author","anchor":"author","htmlText":"Author"}],"siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FmanKellyJr%2Falx-low_level_programming%2Ftree%2Fmaster%2F0x17-doubly_linked_lists"}},"totalCount":32,"showBranchInfobar":false},"fileTree":{"":{"items":[{"name":"0x00-hello_world","path":"0x00-hello_world","contentType":"directory"},{"name":"0x01-variables_if_else_while","path":"0x01-variables_if_else_while","contentType":"directory"},{"name":"0x02-functions_nested_loops","path":"0x02-functions_nested_loops","contentType":"directory"},{"name":"0x03-debugging","path":"0x03-debugging","contentType":"directory"},{"name":"0x04-more_functions_nested_loops","path":"0x04-more_functions_nested_loops","contentType":"directory"},{"name":"0x05-pointers_arrays_strings","path":"0x05-pointers_arrays_strings","contentType":"directory"},{"name":"0x06-pointers_arrays_strings","path":"0x06-pointers_arrays_strings","contentType":"directory"},{"name":"0x07-pointers_arrays_strings","path":"0x07-pointers_arrays_strings","contentType":"directory"},{"name":"0x08-recursion","path":"0x08-recursion","contentType":"directory"},{"name":"0x09-static_libraries","path":"0x09-static_libraries","contentType":"directory"},{"name":"0x0A-argc_argv","path":"0x0A-argc_argv","contentType":"directory"},{"name":"0x0B-malloc_free","path":"0x0B-malloc_free","contentType":"directory"},{"name":"0x0C-more_malloc_free","path":"0x0C-more_malloc_free","contentType":"directory"},{"name":"0x0D-preprocessor","path":"0x0D-preprocessor","contentType":"directory"},{"name":"0x0E-structures_typedef","path":"0x0E-structures_typedef","contentType":"directory"},{"name":"0x0F-function_pointers","path":"0x0F-function_pointers","contentType":"directory"},{"name":"0x10-variadic_functions","path":"0x10-variadic_functions","contentType":"directory"},{"name":"0x12-singly_linked_lists","path":"0x12-singly_linked_lists","contentType":"directory"},{"name":"0x13-more_singly_linked_lists","path":"0x13-more_singly_linked_lists","contentType":"directory"},{"name":"0x14-bit_manipulation","path":"0x14-bit_manipulation","contentType":"directory"},{"name":"0x15-file_io","path":"0x15-file_io","contentType":"directory"},{"name":"0x17-doubly_linked_lists","path":"0x17-doubly_linked_lists","contentType":"directory"},{"name":"0x18-dynamic_libraries","path":"0x18-dynamic_libraries","contentType":"directory"},{"name":"0x1A-hash_tables","path":"0x1A-hash_tables","contentType":"directory"},{"name":"README.md","path":"README.md","contentType":"file"}],"totalCount":25}},"fileTreeProcessingTime":1.461029,"foldersToFetch":[],"treeExpanded":true,"symbolsExpanded":false,"csrf_tokens":{"/manKellyJr/alx-low_level_programming/branches":{"post":"DVMVM2o75c2xYTkJrXxSINkGZ1r5MPEu611QCAqCGjHUPmXD1RK3RjPC7tsCiJnUNWPO8BtHs_1feUGatNQq_A"},"/manKellyJr/alx-low_level_programming/branches/fetch_and_merge/master":{"post":"fpiiI-DbZhLOvgdz86NS4VQa-BId5_s8-gXLk7-hNWRZ4WPQ2FsJl6vEZL7UVkwEq4xoWodzj8ePRevH6FhI1w"},"/manKellyJr/alx-low_level_programming/branches/fetch_and_merge/master?discard_changes=true":{"post":"rOhbEqXbc_SH-ZKIp7Yu0h2J7SoFMvK1VeaWX45PWiSLkZrhnVscceKD8UWAQzA34h99Yp-mhk4gprYL2bYnlw"}}},"title":"alx-low_level_programming/0x17-doubly_linked_lists at master · manKellyJr/alx-low_level_programming"}